<%= simple_form_for(@revision, url: disbursment_url(@disbursment),
                    method: :put, html: {class: "form-horizontal"}) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <div class="span4">
      <table class="table table-condensed table-bordered">
        <tbody>
          <tr>
            <th>Port</th>
            <td><%= @revision.data["port_name"] %></td>
          </tr>
          <tr>
            <th>Vessel</th>
            <td><%= @revision.data["vessel_name"] %></td>
          </tr>
          <tr>
            <th>GRT</th>
            <td><%= @revision.data["vessel_grt"] %></td>
          </tr>
          <tr>
            <th>NRT</th>
            <td><%= @revision.data["vessel_nrt"] %></td>
          </tr>
          <tr>
            <th>DWT</th>
            <td><%= @revision.data["vessel_dwt"] %></td>
          </tr>
          <tr>
            <th>LOA</th>
            <td><%= @revision.data["vessel_loa"] %></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="span4">
    <%= f.input :cargo_qty, label: "Cargo Quantity" %>
    <%= f.input :loadtime, label: "Load Time (Hours)" %>
    <%= f.input :days_alongside, label: "Days Alongside" %>
    </div>
    <div class="span4">
    <%= f.input :tugs_in, label: "Tugs In" %>
    <%= f.input :tugs_out, label: "Tugs Out" %>
    </div>
    <div class="clearfix"></div>
    <h4>Charges</h4>
    <div class="overriden">
    </div>
    <table class="disbursment table table-bordered table-condensed">
      <thead>
        <tr>
          <th>NAME</th>
          <th class="tax">AMOUNT <%= @revision.data["currency_code"] %></th>
          <th class="tax_inc">AMOUNT <%= @revision.data["currency_code"] %> TAX INC.</th>
        </tr>
      </thead>
      <tbody>
        <% @revision.field_keys.each do |k| %>
          <tr class="charge">
            <th><%= @revision.descriptions[k] %></th>
            <td id="charge_<%= k %>">
              <a class="editable_value" id="field_<%= k %>" title="Click to override" href="#"></a>&nbsp;<i class="hidden icon-remove-circle" onclick="revertValue('<%= k %>')"></i>
              <input type="hidden" name="value_<%= k %>" />
              <input  type="hidden" name="value_with_tax_<%= k %>" />
            </td>
            <td id="charge_with_tax_<%= k %>"></td></tr>
        <% end %>
      </tbody>
      <tfoot>
        <th>TOTAL</th>
        <th class="total"></th>
        <th class="total_tax_inc"></th>
      </tfoot>
    </table>

  <div class="form-actions">
    <%= f.submit "Save PFDA" %>
  </div>
<% end %>
<script type="text/javascript">
  $(document).ready(function() {
    $.fn.editable.defaults.mode = 'inline';
    var convert = function(n) {
      return numberToCurrency(n, {unit: '<%= @revision.data["currency_symbol"] %>'});
    };
    var overriden = {};
    window.revertValue = function(key) {
      $("td#charge_"+key+" a").editable('setValue', ctx.computed[key]);
      delete ctx.values[key];
      delete overriden[key];
      $("td#charge_"+key+" a.editable_value").removeClass("editable-unsaved");
      $("td#charge_"+key+" i").addClass("hidden");
      compute();
    };
    $.fn.editable.defaults.display = function(value, sourceData) {
      var key = $(this).attr("id").split("_")[1];
      overriden[key] = parseFloat(value);
      $(this).html(convert(value));
      compute();
    };
    var ctx = {
      charges: <%= @revision.field_keys.to_json.html_safe %>,
      vessel: {
        nrt: <%= @revision.data["vessel_nrt"] %>,
        grt: <%= @revision.data["vessel_grt"] %>,
        dwt: <%= @revision.data["vessel_dwt"] %>,
        loa: <%= @revision.data["vessel_loa"] %>,
      },
      tax_rate: <%= @revision.data["tax_rate"] %>,
      data: <%= @revision.data.to_json.html_safe %>,
      codes: <%= @revision.codes.to_json.html_safe %>,
      values: <%= @revision.values.to_json.html_safe %>,
      computed: {}
    };
    var compute = function() {
      ctx.estimate = {
        cargo_qty: parseInt($("input#disbursment_revision_cargo_qty").val()),
        tugs_in: parseInt($("input#disbursment_revision_tugs_in").val()),
        tugs_out: parseInt($("input#disbursment_revision_tugs_out").val()),
        loadtime: parseInt($("input#disbursment_revision_loadtime").val()),
        days_alongside: parseInt($("input#disbursment_revision_days_alongside").val())
      };
      var total = 0,
          totalTaxInc = 0;
      for (var i = 0; i < ctx.charges.length; ++i) {
        var key = ctx.charges[i];
        var code = eval("("+ctx.codes[key]+")");
        var val = parseFloat(code.compute(ctx));
        ctx.computed[key] = val;
        if (ctx.values[key]) {
          var saved = parseFloat(ctx.values[key]);
          if (saved != val) {
            overriden[key] = saved;
            $("td#charge_"+key+" a").addClass("editable-unsaved");
          }
        }
        if (overriden[key]) {
          $("td#charge_"+key+" i").removeClass("hidden");
          val = overriden[key];
        }
        if (!isNaN(val)) {
          total += val;
        }
        var valTaxInc = val;
        if (code.taxApplies) {
          if (code.taxRate) {
            valTaxInc = val*code.taxRate;
          } else {
            valTaxInc = val*parseFloat(ctx.tax_rate);
          }
        }
        if (!isNaN(valTaxInc)) {
          totalTaxInc += valTaxInc;
        }
        $("td#charge_"+key+" a").html(convert(val));
        $("td#charge_"+key+" a").attr("data-value", val.toFixed(2));
        $("td#charge_with_tax_"+key).html(convert(valTaxInc));
        $('input[name="value_'+key+'"]').val(val);
        $('input[name="value_with_tax_'+key+'"]').val(valTaxInc);
      }
      $("th.total").html(convert(total));
      $("th.total_tax_inc").html(convert(totalTaxInc));
      $("td a.editable_value").editable();
    }
    var cleanCompute = function() {
      overriden = {};
      $("a.editable_value").removeClass("editable-unsaved");
      compute();
    };
    $("input#disbursment_revision_cargo_qty").on("change", cleanCompute);
    $("input#disbursment_revision_tugs_in").on("change", cleanCompute);
    $("input#disbursment_revision_tugs_out").on("change", cleanCompute);
    $("input#disbursment_revision_loadtime").on("change", cleanCompute);
    $("input#disbursment_revision_days_alongside").on("change", cleanCompute);
    compute();
  });
</script>
